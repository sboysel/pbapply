% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pbapply.R
\name{pbapply}
\alias{pbapply}
\alias{pblapply}
\alias{pbreplicate}
\alias{pbsapply}
\title{\code{apply} family functions with progress bars}
\usage{
pbapply(X, MARGIN, FUN, ...)

pbsapply(X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE)

pblapply(X, FUN, ...)

pbreplicate(n, expr, simplify = "array")
}
\arguments{
\item{X}{either an array for \code{pbapply} or a vector (or list) for
\code{pblapply}, \code{pbsapply}, and \code{pbreplicate}}

\item{MARGIN}{a vector giving the subscripts which the function will be 
applied over. E.g., for a matrix 1 indicates rows, 2 indicates columns, 
c(1, 2) indicates rows and columns. Where X has named dimnames, it can be a 
character vector selecting dimension names.}

\item{FUN}{the function to be applied: see 'Details'. In the case of 
functions like +, \%*\%, etc., the function name must be backquoted or quoted.}

\item{...}{optional arguments to \code{FUN}}

\item{simplify}{logical or character string; should the result be simplified 
to a vector, matrix or higher dimensional array if possible? For sapply it 
must be named and not abbreviated. The default value, TRUE, returns a vector 
or matrix if appropriate, whereas if simplify = "array" the result may be an 
\code{\link[base]{array}} of "rank" (=length(dim(.))) one higher than the 
result of FUN(X[[i]]).}

\item{USE.NAMES}{logical; if TRUE and if X is character, use X as 
\code{\link[base]{names}} for the result unless it had names already. Since 
this argument follows ... its name cannot be abbreviated.}

\item{n}{integer: the number of replications.}

\item{expr}{the expression to evaluate repeatedly.}
}
\description{
Wrap \code{\link[base]{apply}} family with progress bars.
}
\examples{
x <- sapply(1:10, function(x) runif(10))
y <- lapply(1:10, function(x) runif(10))

pbapply(x, 1, mean)
pbsapply(y, mean)
pblapply(y, mean)

}
\seealso{
\code{\link[base]{apply}}, \code{\link[base]{sapply}}, 
\code{\link[base]{lapply}}, \code{\link[base]{replicate}}
}

